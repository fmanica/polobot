import io, sys, time, datetime, urllib2, json, argparse 
import traceback
import numpy as np
from poloniex import Poloniex
from Logger import Logger
from decimal import *
SATOSHI = Decimal(10) ** -8


sleepTime = 1 #Start with active mode
apiKey = " "
apiSecret = " "
interestedCurrencies = ['ETH', 'ETC']

#sanity checks
if sleepTime < 1 or sleepTime > 3600:
        print "sleeptime values must be 1-3600"
        exit(1)

def timestamp():
        ts = time.time()
        return datetime.datetime.fromtimestamp(ts).strftime('%Y-%m-%d %H:%M:%S')

polo = Poloniex(apiKey, apiSecret)
log = {}

# check if json output is enabled
jsonOutputEnabled = " "
if jsonOutputEnabled:
        jsonFile = 'www/botlog.json'
        jsonLogSize = 2000
        log = Logger(jsonFile, jsonLogSize)
        print ("Logging")


print 'Welcome to Bot'
                
def tickerInfo():
        tickerResponse = polo.returnTicker();
        for couple in tickerResponse:
                currencies = couple.split('_')
                ref = currencies[0]
                currency = currencies[1]
                time = log.timestamp
                if ref == 'BTC' and currency in interestedCurrencies:
                        last = tickerResponse [couple]['last']
                        bid = tickerResponse [couple]['highestBid']
                        ask = tickerResponse [couple]['lowestAsk']
                        high24hr = tickerResponse [couple]['high24hr']
                        low24hr = tickerResponse [couple]['low24hr']
                        volume24hr = tickerResponse [couple]['baseVolume']
                        print (currency + ' Last: ' + last + ' Bid: ' + bid + ' Ask: ' + ask)
                        tickerData = {couple, time, last, bid, ask, high24hr, low24hr}

def writeToFile():
        

try:
        while True:
                try:
                        tickerInfo()
                        writeToFile()
                        time.sleep(sleepTime)
                except Exception as e:
                        log.log("ERROR: " + str(e))
                        print("ERROR: " + str(e))
                        time.sleep(sleepTime)
                        pass
